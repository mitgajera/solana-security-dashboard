"use client"

import { useState } from "react"
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogFooter,
  DialogHeader,
  DialogTitle,
} from "@/components/ui/dialog"
import { Button } from "@/components/ui/button"
import { Badge } from "@/components/ui/badge"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { Textarea } from "@/components/ui/textarea"
import { Label } from "@/components/ui/label"
import { AlertTriangleIcon, CheckCircleIcon, XCircleIcon, ClipboardIcon, ExternalLinkIcon, MessageSquareIcon } from "lucide-react"

type ExploitDetailsDialogProps = {
  exploit: {
    id: string
    project: string
    submittedBy: string
    submittedDate: string
    type: string
    estimatedLoss: string
    status: string
    priority: string
    description: string
  }
  open: boolean
  onOpenChange: (open: boolean) => void
}

export function ExploitDetailsDialog({ exploit, open, onOpenChange }: ExploitDetailsDialogProps) {
  const [adminNotes, setAdminNotes] = useState("")
  const [activeTab, setActiveTab] = useState("details")

  const handleApprove = () => {
    console.log(`Approving exploit ${exploit.id}`)
    // Here you would make an API call to approve the exploit
    onOpenChange(false)
  }

  const handleReject = () => {
    console.log(`Rejecting exploit ${exploit.id}`)
    // Here you would make an API call to reject the exploit
    onOpenChange(false)
  }

  const handleReview = () => {
    console.log(`Marking exploit ${exploit.id} for review`)
    // Here you would make an API call to mark the exploit for review
    onOpenChange(false)
  }

  return (
    <Dialog open={open} onOpenChange={onOpenChange}>
      <DialogContent className="max-w-3xl max-h-[90vh] overflow-y-auto">
        <DialogHeader>
          <DialogTitle className="flex items-center gap-2">
            <span>Exploit Submission Details</span>
            <Badge variant={
              exploit.priority === "high" ? "destructive" :
              exploit.priority === "medium" ? "default" :
              "outline"
            }>
              {exploit.priority.charAt(0).toUpperCase() + exploit.priority.slice(1)} Priority
            </Badge>
          </DialogTitle>
          <DialogDescription>
            Review and verify the submitted exploit details
          </DialogDescription>
        </DialogHeader>

        <Tabs value={activeTab} onValueChange={setActiveTab}>
          <TabsList className="grid grid-cols-3 mb-4">
            <TabsTrigger value="details">Details</TabsTrigger>
            <TabsTrigger value="evidence">Evidence</TabsTrigger>
            <TabsTrigger value="notes">Admin Notes</TabsTrigger>
          </TabsList>

          <TabsContent value="details" className="space-y-4">
            <div className="grid grid-cols-2 gap-4">
              <div>
                <h3 className="text-sm font-medium text-muted-foreground">Project</h3>
                <p className="text-base font-bold">{exploit.project}</p>
              </div>
              <div>
                <h3 className="text-sm font-medium text-muted-foreground">Vulnerability Type</h3>
                <p className="text-base font-medium">{exploit.type}</p>
              </div>
            </div>

            <div className="grid grid-cols-2 gap-4">
              <div>
                <h3 className="text-sm font-medium text-muted-foreground">Submitted By</h3>
                <p className="text-base">{exploit.submittedBy}</p>
              </div>
              <div>
                <h3 className="text-sm font-medium text-muted-foreground">Submission Date</h3>
                <p className="text-base">{new Date(exploit.submittedDate).toLocaleString()}</p>
              </div>
            </div>

            <div className="grid grid-cols-2 gap-4">
              <div>
                <h3 className="text-sm font-medium text-muted-foreground">Estimated Loss</h3>
                <p className="text-base font-bold">{exploit.estimatedLoss}</p>
              </div>
              <div>
                <h3 className="text-sm font-medium text-muted-foreground">Status</h3>
                <Badge variant={
                  exploit.status === "pending" ? "outline" :
                  exploit.status === "under review" ? "secondary" :
                  "default"
                }>
                  {exploit.status === "pending" ? "Pending" :
                   exploit.status === "under review" ? "Under Review" :
                   exploit.status}
                </Badge>
              </div>
            </div>

            <div>
              <h3 className="text-sm font-medium text-muted-foreground mb-2">Description</h3>
              <div className="p-4 rounded-md bg-muted">
                <p className="text-sm whitespace-pre-wrap">{exploit.description}</p>
              </div>
            </div>

            <div>
              <h3 className="text-sm font-medium text-muted-foreground mb-2">Transaction Details</h3>
              <div className="p-4 rounded-md bg-muted flex items-center gap-2">
                <code className="text-xs font-mono">5xMPvKV5p3JRq19CAiDT8yGAD93cZ8AEjYWnP3yx8wVY</code>
                <Button variant="ghost" size="icon" className="h-6 w-6">
                  <ClipboardIcon className="h-4 w-4" />
                </Button>
                <Button variant="ghost" size="icon" className="h-6 w-6">
                  <ExternalLinkIcon className="h-4 w-4" />
                </Button>
              </div>
            </div>
          </TabsContent>

          <TabsContent value="evidence" className="space-y-4">
            <div className="p-4 border rounded-md">
              <h3 className="text-sm font-medium mb-2">Attached Evidence</h3>
              <ul className="space-y-2">
                <li className="text-sm flex items-center gap-2">
                  <ExternalLinkIcon className="h-4 w-4" />
                  <a href="/files/exploit-timeline.pdf" className="text-primary hover:underline">exploit-timeline.pdf</a>
                </li>
                <li className="text-sm flex items-center gap-2">
                  <ExternalLinkIcon className="h-4 w-4" />
                  <a href="/files/transaction-trace.json" className="text-primary hover:underline">transaction-trace.json</a>
                </li>
                <li className="text-sm flex items-center gap-2">
                  <ExternalLinkIcon className="h-4 w-4" />
                  <a href="/files/wallet-analysis.txt" className="text-primary hover:underline">wallet-analysis.txt</a>
                </li>
              </ul>
            </div>

            <div className="border rounded-md p-4">
              <h3 className="text-sm font-medium mb-2">Technical Impact</h3>
              <p className="text-sm">
                The vulnerability allowed the attacker to drain approximately {exploit.estimatedLoss} from the protocol's liquidity pools.
                The exploit affected approximately 1,200 users who had deposited funds into the protocol.
                The vulnerability has been patched in the latest version of the contract.
              </p>
            </div>

            <div className="border rounded-md p-4">
              <h3 className="text-sm font-medium mb-2">Timeline</h3>
              <ul className="space-y-2 text-sm">
                <li className="flex items-start gap-2">
                  <span className="font-mono">2025-04-07 14:32</span>
                  <span>Initial exploit transaction detected</span>
                </li>
                <li className="flex items-start gap-2">
                  <span className="font-mono">2025-04-07 15:15</span>
                  <span>Protocol team notified of the exploit</span>
                </li>
                <li className="flex items-start gap-2">
                  <span className="font-mono">2025-04-07 16:20</span>
                  <span>Emergency protocol pause implemented</span>
                </li>
                <li className="flex items-start gap-2">
                  <span className="font-mono">2025-04-08 09:45</span>
                  <span>Detailed analysis completed and submitted</span>
                </li>
              </ul>
            </div>
          </TabsContent>

          <TabsContent value="notes" className="space-y-4">
            <div>
              <Label htmlFor="admin-notes">Admin Notes</Label>
              <Textarea
                id="admin-notes"
                placeholder="Add your notes about this exploit submission..."
                className="h-40 mt-2"
                value={adminNotes}
                onChange={(e) => setAdminNotes(e.target.value)}
              />
            </div>

            <div className="border rounded-md p-4">
              <h3 className="text-sm font-medium mb-2 flex items-center gap-2">
                <MessageSquareIcon className="h-4 w-4" />
                Discussion Thread
              </h3>
              <div className="space-y-3 mt-3">
                <div className="bg-muted p-3 rounded-md">
                  <div className="flex justify-between items-center mb-1">
                    <p className="text-xs font-medium">Alice (Security Team)</p>
                    <span className="text-xs text-muted-foreground">1 day ago</span>
                  </div>
                  <p className="text-sm">I've verified the transaction trace and this appears to be a legitimate exploit. Need to check with the protocol team if this has been fixed.</p>
                </div>
                <div className="bg-muted p-3 rounded-md">
                  <div className="flex justify-between items-center mb-1">
                    <p className="text-xs font-medium">Bob (Protocol Team)</p>
                    <span className="text-xs text-muted-foreground">12 hours ago</span>
                  </div>
                  <p className="text-sm">We've patched the vulnerability in our latest contract version. Funds have been frozen and we're preparing a compensation plan.</p>
                </div>
              </div>
            </div>
          </TabsContent>
        </Tabs>

        <DialogFooter className="flex flex-col sm:flex-row gap-2 mt-6">
          <Button variant="outline" onClick={handleReview}>
            Mark for Review
          </Button>
          <div className="flex gap-2">
            <Button variant="destructive" onClick={handleReject}>
              <XCircleIcon className="mr-2 h-4 w-4" />
              Reject
            </Button>
            <Button onClick={handleApprove}>
              <CheckCircleIcon className="mr-2 h-4 w-4" />
              Approve
            </Button>
          </div>
        </DialogFooter>
      </DialogContent>
    </Dialog>
  )
}
