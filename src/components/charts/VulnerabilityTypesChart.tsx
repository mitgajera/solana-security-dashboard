import React, { useState, useEffect } from 'react';
import { PieChart, Pie, Cell, Tooltip, Legend, ResponsiveContainer } from 'recharts';
import { useExploitData } from '../../hooks/useExploitData';

const VulnerabilityTypesChart: React.FC = () => {
  const { exploits, loading, error } = useExploitData();
  const [chartData, setChartData] = useState<Array<{name: string; value: number}>>([]);
  
  // Process exploit data when it changes
  useEffect(() => {
    if (exploits && exploits.length) {
      // Count vulnerabilities by type
      const typeCount: Record<string, number> = {};
      
      exploits.forEach(exploit => {
        if (!typeCount[exploit.type]) {
          typeCount[exploit.type] = 0;
        }
        typeCount[exploit.type]++;
      });
      
      // Convert to chart data format
      const data = Object.entries(typeCount).map(([name, value]) => ({
        name,
        value
      }));
      
      setChartData(data);
    }
  }, [exploits]);
  
  // Define a consistent color scheme
  const COLORS = ['#FF5A5A', '#3B82F6', '#FFB800', '#00C853', '#9333EA', '#64B5F6'];

  if (loading) return <div className="p-4 text-center text-dark-100">Loading vulnerability data...</div>;
  if (error) return <div className="p-4 text-center text-danger">{error}</div>;
  
  return (
    <div className="card h-80 w-full">
      <div className="p-5 border-b border-dark-500">
        <h3 className="text-white font-medium">Vulnerabilities by Type</h3>
        <p className="text-xs text-dark-100 mt-1">Distribution of exploit categories</p>
      </div>
      
      <div className="h-64 p-4">
        <ResponsiveContainer width="100%" height="100%">
          <PieChart>
            <Pie
              data={chartData}
              cx="50%"
              cy="50%"
              labelLine={false}
              label={({ name, percent }) => `${name} (${(percent * 100).toFixed(0)}%)`}
              outerRadius={80}
              fill="#8884d8"
              dataKey="value"
            >
              {chartData.map((entry, index) => (
                <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />
              ))}
            </Pie>
            <Tooltip 
              formatter={(value) => [`${value} exploits`, 'Count']}
              contentStyle={{ 
                backgroundColor: '#1A1A1A', 
                borderColor: '#2A2A2A',
                color: '#E0E0E0'
              }} 
            />
            <Legend />
          </PieChart>
        </ResponsiveContainer>
      </div>
    </div>
  );
};

export default VulnerabilityTypesChart;